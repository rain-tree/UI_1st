apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = VERSION_NAME
group = GROUP

install {
    repositories.mavenInstaller {
        pom {
            //noinspection GroovyAssignabilityCheck
            project {
                packaging POM_PACKAGING
                groupId GROUP
                artifactId POM_ARTIFACT_ID

                // Add your description here
                name POM_NAME
                url PRJ_URL

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id DEVELOPER_ID
                        name DEVELOPER_NAME
                        email DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection GIT_URL
                    developerConnection GIT_URL
                    url PRJ_URL

                }
            }
        }
    }
}
if (project.getPlugins().hasPlugin('com.android.application') ||
        project.getPlugins().hasPlugin('com.android.library')) {
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.compile
        failOnError false
    }
} else {
    task sourcesJar(type: Jar, dependsOn:classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = POM_NAME
        userOrg = 'kyleduo'
        licenses = ['Apache-2.0']
        websiteUrl = PRJ_URL
        vcsUrl = GIT_URL
        publicDownloadNumbers = true
        override = true
        publish = true

        version {
            name = VERSION_NAME
            desc = DESC
            released  = new Date()
            vcsTag = version
        }
    }
}

bintrayUpload.dependsOn install